x-airflow-common:
  &airflow-common
  image: my-airflow:local
  build:
    context: ./airflow
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__WEBSERVER__SECRET_KEY: 'your-secret-key-minimum-16-characters'
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/plugins:/opt/airflow/plugins
    - ./airflow/scripts:/opt/airflow/scripts
    - airflow-logs:/opt/airflow/logs
  user: "50000:0"
  depends_on:
    - postgres

services:
  api:
    build:
      context: ./api
    environment:
      NEO4J_USER: neo4j
      NEO4J_PASS: password
      NEO4J_HOST: bolt://neo4j:7687
      NEO4J_BASE: data
    ports:
      - "4000:4000"
    depends_on:
      neo4j:
        condition: service_healthy

  neo4j:
    image: neo4j:5.18-enterprise
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4JLABS_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "cypher-shell -u neo4j -p password 'RETURN 1' || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  neo4j-init:
    image: neo4j:5.18-enterprise
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      NEO4J_AUTH: neo4j/password
    entrypoint: /bin/bash
    command: >
      -c "
      cypher-shell -a neo4j://neo4j:7687 -u neo4j -p password -d system 
      'CREATE DATABASE data IF NOT EXISTS' &&
      echo 'Database created successfully!'
      "

  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./docker-assets/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker-assets/postgres/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./docker-assets/postgres/csv:/data
    ports:
      - "5432:5432"

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: /opt/airflow/scripts/init-airflow.sh
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres-db-volume:
  neo4j_data:
  airflow-logs: